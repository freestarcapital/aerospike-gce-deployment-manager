# aerospike-config.yaml
#
# Deployment Manager template for deploying Aerospike on a cluster of servers.
#
# The Aerospike deployment here consists of the following replica pool:
#  * Aerospike server instances
#
# A gcp Aerospike replicaset deployment will have 3 Aerospike instances

imports:
- path: aerospike.jinja
- name: default.py
  path: common/default.py
- name: common.py
  path: common/common.py
- name: vm_instance.py
  path: common/vm_instance.py
- name: vm_multiple_instances.py
  path: common/vm_multiple_instances.py

resources:
- name: aerospike_server
  type: aerospike.jinja
  properties:
    # Begin: GCE resource parameters
    numReplicas: 1
    namePrefix: aerospike
    zone: us-central1-b
    machineType: n1-highmem-4
    network: default
    bootDiskType: pd-standard
    # End: GCE resource parameters

    # Begin: Aerospike resource parameters    
    numLocalSSDs: 1
    useShadowDevice: false
    diskSize: 0

    ## NOTE THAT WE MANUALLY ADDED 500G SSD DRIVE FOR STORAGE OF mlssd and dev-mlssd
    ## THUS THEY ARE COMMENTED OUT HERE. ADD THE SSD DRIVE VIA THE GCP INTERFACE AND THEN UNCOMMENT AND RESTART
    namespace: |
        ## SCRATCH DISK STORAGE DEFAULT 
        namespace ssd {
            replication-factor 2
            memory-size 25G
            default-ttl 0d # 30 days, use 0 to never expire/evict.
            storage-engine device {
                device /dev/disk/by-id/google-local-ssd-0 # local ssds
                #device /dev/disk/by-id/google-$DISK
                write-block-size 1M
            }
        }

        ## IN MEMORY STORAGE
        namespace ml {
           replication-factor 2
           memory-size 4G
           default-ttl 0d # 30 days, use 0 to never expire/evict.
           storage-engine memory
        }
        #namespace dev-ml {
        #   replication-factor 2
        #   memory-size 4G
        #   default-ttl 0d # 30 days, use 0 to never expire/evict.
        #   storage-engine memory
        #}

        ## SSD DRIVE THAT WE ADDED - THIS MAY CAUSE ISSUES WITH BUILD AS IT DOESN'T LIKELY EXIST YET
        namespace mlssd {
           replication-factor 2
           memory-size 100G ## THIS IS CAPACITY - NOT ACTUALLY MEMORY 
           default-ttl 0d   ## 30 days, use 0 to never expire/evict.
           storage-engine device {
              device /dev/disk/by-id/google-aerospike-data-disc # local ssds
              #device /dev/disk/by-id/google-$DISK
              write-block-size 128K
           }
        }

        #namespace dev-mlssd {
        #   replication-factor 2
        #   memory-size 10G ## THIS IS CAPACITY - NOT ACTUALLY MEMORY 
        #   default-ttl 0d   ## 30 days, use 0 to never expire/evict.
        #   storage-engine device {
        #      device /dev/disk/by-id/google-aerospike-data-disc # local ssds
        #      #device /dev/disk/by-id/google-$DISK
        #      write-block-size 128K
        #   }
        #}

        # UNCOMMENT AND RESTART TO TURN SECURITY ON
        # YOU WILL NEED TO SET UP USER/PASS/ROLE MANUALL
        #security: |
        #  security {
        #  enable-security true
        #}
